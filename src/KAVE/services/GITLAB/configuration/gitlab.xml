<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
  <!-- <property>
    <name>gitlab_admin_login</name>
    <value>admin</value>
    <description>Gitlab admin. Commented out because it is not used anywhere right now.</description>
  </property> -->
  <property require-input = "true">
    <name>gitlab_admin_password</name>
    <value></value>
    <property-type>PASSWORD</property-type>
    <value-attributes>
    	<type>password</type>
    </value-attributes>
    <description>Gitlab Admin Password.</description>
  </property>
  <property>
    <name>gitlab_ssl_port</name>
    <value>443</value>
    <description>Port on which gitlab will run.</description>
  </property>
  <property>
    <name>unicorn_port</name>
    <value>8080</value>
    <description>Port on which unicorn interface will run (internal to gitlab).</description>
  </property>
  <property>
    <name>unicorn_interface</name>
    <value>127.0.0.1</value>
    <description>Interface on which unicorn will listen (internal to gitlab).</description>
  </property>
  <property>
    <name>gitlab_url</name>
    <value>hostname</value>
    <description>
        Alias URL of this server, what your users will use to get to this git,
        if blank or set to 'hostname', use the evaluated hostname (probably fqdn)
    </description>
  </property>
  <property>
    <name>restrict_public_projects</name>
    <value>true</value>
    <description>
        Disables the public visibility level for projects.
    </description>
  </property>
  <property>
    <name>gitlab_signin_enabled</name>
    <value>true</value>
    <description>
        Toggles the availability of the standard signin dialog.
        The default here is True so that the admin user can still be used initially,
        however this can be turned off once a human administrator is allocated.
    </description>
  </property>
  <property>
    <name>use_external_postgres</name>
    <value>false</value>
    <description>
        Use external Postgres server or embedded one
    </description>
  </property>
  <property>
    <name>postgres_database_host</name>
    <value>127.0.0.1</value>
    <description>
        External Postgres server host
    </description>
  </property>
  <property>
    <name>postgres_database_port</name>
    <value>5432</value>
    <description>
        External Postgres server port
    </description>
  </property>
  <property>
    <name>postgres_database_name</name>
    <value>gitlabhq_production</value>
    <description>
        Postgres database name
    </description>
  </property>
  <property>
    <name>postgres_database_user</name>
    <value>gitlab</value>
    <description>
        Postgres database user
    </description>
  </property>
  <property>
    <name>gitlabrb</name>
    <value># Created automatically with Ambari
# All manual changes will be undone in the case of a server restart
# Edit the template through the Ambari interface instead

# Change the external_url to the address your users will type in their browser
external_url 'https://{{gitlab_url}}:{{gitlab_ssl_port}}'

{% if ldap_enabled %}
gitlab_rails['ldap_enabled'] = true
gitlab_rails['ldap_host'] = '{{ldap_host}}'
gitlab_rails['ldap_port'] = {{ldap_port}}
gitlab_rails['ldap_uid'] = '{{ldap_uid}}'
gitlab_rails['ldap_method'] = '{{ldap_method}}'
gitlab_rails['ldap_allow_username_or_email_login'] = {{ldap_allow_username_or_email_login}}
gitlab_rails['ldap_base'] = '{{ldap_base}}'
#gitlab_rails['ldap_user_filter'] = '(memberOf=CN={{ldap_group}},{{ldap_base}})'
#gitlab_rails['admin_group'] = '{{ldap_admin_group}}'
{% endif %}

gitlab_rails['initial_root_password'] = '{{gitlab_admin_password}}'

{% if not gitlab_signin_enabled %}
gitlab_rails['gitlab_signin_enabled'] = false
{% endif %}

{% if restrict_public_projects %}
gitlab_rails['gitlab_restricted_visibility_levels'] = [ "public" ]
{% endif %}

{% if use_external_postgres %}
# Disable the built-in Postgres? This doesn't work for the moment, leave here as a placeholder for the full solution
postgresql['enable'] = false

gitlab_rails['db_adapter'] = 'postgresql'
gitlab_rails['db_encoding'] = 'unicode'
# Create database manually and place its name here.
gitlab_rails['db_database'] = '{{postgres_database_name}}'
gitlab_rails['db_host'] = '{{postgres_database_host}}'
gitlab_rails['db_port'] = '{{postgres_database_port}}'
gitlab_rails['db_username'] = '{{postgres_database_user}}' # Database owner.
gitlab_rails['db_password'] = '{{gitlab_admin_password}}' # Database owner's password.
{% endif %}

unicorn['port']={{unicorn_port}}
unicorn['listen']='{{unicorn_interface}}'
    </value>
    <description>
        The configuration of Gitlab.
        This is a j2 template, and is used/reread whenever gitlab is restarted.
        In case you have a very custom configuration, this is where to put it.
        Only for very advanced use.
    </description>
  </property>
  <!-- <property>
    <name>ldap_group</name>
    <value>gitlab</value>
    <description>
        If you have ldap enabled, this entry corresponds to the name of the group which contains all gitlab users
        Commented out because there is no way to pass this to gitlab right now.
    </description>
  </property>
  <property>
    <name>ldap_admin_group</name>
    <value>admins</value>
    <description>
        If you have ldap enabled, this entry corresponds to the name of the group which contains all gitlab administrators
        Commented out because there is no way to pass this to gitlab right now.
    </description>
  </property> -->
</configuration>
