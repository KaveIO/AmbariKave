<<<<<<< HEAD
[core]
# The home folder for airflow, default is ~/airflow
airflow_home = /root/airflow

# The folder where your airflow pipelines live, most likely a
# subfolder in a code repository
dags_folder = /root/airflow/dags

# The folder where airflow should store its log files. This location
base_log_folder = /root/airflow/logs

# Airflow can store logs remotely in AWS S3 or Google Cloud Storage. Users
# must supply a remote location URL (starting with either 's3://...' or
# 'gs://...') and an Airflow connection id that provides access to the storage
# location.
remote_base_log_folder =
remote_log_conn_id =
# Use server-side encryption for logs stored in S3
encrypt_s3_logs = False
# deprecated option for remote log storage, use remote_base_log_folder instead!
# s3_log_folder =

# The executor class that airflow should use. Choices include
# SequentialExecutor, LocalExecutor, CeleryExecutor
executor = SequentialExecutor
#executor = LocalExecutor

# The SqlAlchemy connection string to the metadata database.
# SqlAlchemy supports many different database engine, more information
# their website
sql_alchemy_conn = sqlite:////root/airflow/airflow.db

# The SqlAlchemy pool size is the maximum number of database connections
# in the pool.
sql_alchemy_pool_size = 5

# The SqlAlchemy pool recycle is the number of seconds a connection
# can be idle in the pool before it is invalidated. This config does
# not apply to sqlite.
sql_alchemy_pool_recycle = 3600

# The amount of parallelism as a setting to the executor. This defines
# the max number of task instances that should run simultaneously
# on this airflow installation
parallelism = 32

# The number of task instances allowed to run concurrently by the scheduler
dag_concurrency = 16

# Are DAGs paused by default at creation
dags_are_paused_at_creation = True

# When not using pools, tasks are run in the "default pool",
# whose size is guided by this config element
non_pooled_task_slot_count = 128

# The maximum number of active DAG runs per DAG
max_active_runs_per_dag = 16

# Whether to load the examples that ship with Airflow. It's good to
# get started, but you probably want to set this to False in a production
# environment
load_examples = True

# Where your Airflow plugins are stored
plugins_folder = /root/airflow/plugins

# Secret key to save connection passwords in the db
fernet_key = 2IT-D1Z4DV7P_uirajSKwixBUepSYB8mwZycWQDeMdI=

# Whether to disable pickling dags
donot_pickle = False

# How long before timing out a python file import while filling the DagBag
dagbag_import_timeout = 30


[operators]
# The default owner assigned to each new operator, unless
# provided explicitly or passed via `default_args`
default_owner = Airflow


[webserver]
# The base url of your website as airflow cannot guess what domain or
# cname you are using. This is used in automated emails that
# airflow sends to point links to the right web server
base_url = http://localhost:8080

# The ip specified when starting the web server
web_server_host = 0.0.0.0

# The port on which to run the web server
web_server_port = 8080

# The time the gunicorn webserver waits before timing out on a worker
web_server_worker_timeout = 120

# Secret key used to run your flask app
secret_key = temporary_key

# Number of workers to run the Gunicorn web server
workers = 4

# The worker class gunicorn should use. Choices include
# sync (default), eventlet, gevent
worker_class = sync

# Expose the configuration file in the web server
expose_config = true

# Set to true to turn on authentication:
# http://pythonhosted.org/airflow/installation.html#web-authentication
authenticate = False

# Filter the list of dags by owner name (requires authentication to be enabled)
filter_by_owner = False

[email]
email_backend = airflow.utils.email.send_email_smtp

[smtp]
# If you want airflow to send emails on retries, failure, and you want to use
# the airflow.utils.email.send_email_smtp function, you have to configure an smtp
# server here
smtp_host = localhost
smtp_starttls = True
smtp_ssl = False
smtp_user = airflow
smtp_port = 25
smtp_password = airflow
smtp_mail_from = airflow@airflow.com

[celery]
# This section only applies if you are using the CeleryExecutor in
# [core] section above

# The app name that will be used by celery
celery_app_name = airflow.executors.celery_executor

# The concurrency that will be used when starting workers with the
# "airflow worker" command. This defines the number of task instances that
# a worker will take, so size up your workers based on the resources on
# your worker box and the nature of your tasks
celeryd_concurrency = 16

# When you start an airflow worker, airflow starts a tiny web server
# subprocess to serve the workers local log files to the airflow main
# web server, who then builds pages and sends them to users. This defines
# the port on which the logs are served. It needs to be unused, and open
# visible from the main web server to connect into the workers.
worker_log_server_port = 8793

# The Celery broker URL. Celery supports RabbitMQ, Redis and experimentally
# a sqlalchemy database. Refer to the Celery documentation for more
# information.
broker_url = sqla+mysql://airflow:airflow@localhost:3306/airflow

# Another key Celery setting
celery_result_backend = db+mysql://airflow:airflow@localhost:3306/airflow

# Celery Flower is a sweet UI for Celery. Airflow has a shortcut to start
# it `airflow flower`. This defines the port that Celery Flower runs on
flower_port = 5555

# Default queue that tasks get assigned to and that worker listen on.
default_queue = default

[scheduler]
# Task instances listen for external kill signal (when you clear tasks
# from the CLI or the UI), this defines the frequency at which they should
# listen (in seconds).
job_heartbeat_sec = 5

# The scheduler constantly tries to trigger new tasks (look at the
# scheduler section in the docs for more information). This defines
# how often the scheduler should run (in seconds).
scheduler_heartbeat_sec = 5

# Statsd (https://github.com/etsy/statsd) integration settings
# statsd_on =  False
# statsd_host =  localhost
# statsd_port =  8125
# statsd_prefix = airflow

# The scheduler can run multiple threads in parallel to schedule dags.
# This defines how many threads will run. However airflow will never
# use more threads than the amount of cpu cores available.
max_threads = 2

[mesos]
# Mesos master address which MesosExecutor will connect to.
master = localhost:5050

# The framework name which Airflow scheduler will register itself as on mesos
framework_name = Airflow

# Number of cpu cores required for running one task instance using
# 'airflow run <dag_id> <task_id> <execution_date> --local -p <pickle_id>'
# command on a mesos slave
task_cpu = 1

# Memory in MB required for running one task instance using
# 'airflow run <dag_id> <task_id> <execution_date> --local -p <pickle_id>'
# command on a mesos slave
task_memory = 256

# Enable framework checkpointing for mesos
# See http://mesos.apache.org/documentation/latest/slave-recovery/
checkpoint = False

# Failover timeout in milliseconds.
# When checkpointing is enabled and this option is set, Mesos waits
# until the configured timeout for
# the MesosExecutor framework to re-register after a failover. Mesos
# shuts down running tasks if the
# MesosExecutor framework fails to re-register within this timeframe.
# failover_timeout = 604800

# Enable framework authentication for mesos
# See http://mesos.apache.org/documentation/latest/configuration/
authenticate = False

# Mesos credentials, if authentication is enabled
# default_principal = admin
# default_secret = admin
=======
	<!DOCTYPE html>
	<html lang="en">
	<head>
	<!-- LICENSE INFORMATION -->
<!--
##############################################################################
#
# Copyright 2016 KPMG Advisory N.V. (unless otherwise stated)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
##############################################################################
-->
	<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta charset="utf-8">
	<title>KAVE: Your KaveLanding Page</title>
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<link href="bootstrap.min.css" rel="stylesheet">

	<!--[if lt IE 9]>
	<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
	<link rel="shortcut icon" href="/bootstrap/img/favicon.ico">
	<link rel="apple-touch-icon" href="/bootstrap/img/apple-touch-icon.png">
	<link rel="apple-touch-icon" sizes="72x72" href="/bootstrap/img/apple-touch-icon-72x72.png">
	<link rel="apple-touch-icon" sizes="114x114" href="/bootstrap/img/apple-touch-icon-114x114.png">


	<style type="text/css">
	/* Sticky footer styles
	-------------------------------------------------- */

	html,
	body {
	height: 100%;
	/* The html and body elements cannot have any padding or margin. */
	}

	/* Wrapper for page content to push down footer */
	#wrap {
	min-height: 100%;
	height: auto !important;
	height: 100%;
	/* Negative indent footer by its height */
	margin: 0 auto -42px;
	/* Pad bottom by footer height */
	padding: 0 0 42px;
	}

	/* Set the fixed height of the footer here */
	#footer {
	height: 42px;
	background-color: #D2E7F2;
	}


	/* Custom page CSS
	-------------------------------------------------- */
	/* Not required for template or sticky footer method. */

	#wrap > .container {
	padding: 60px 15px 0;
	}
	.container .credit {
	margin: 20px 0;
	}

	#footer > .container {
	padding-left: 15px;
	padding-right: 15px;
	}

	code {
	font-size: 80%;
	}

	.navbar-default {
	background-color: #0072AF;
	border-color: #91c8ff;
	}
	.navbar-default .navbar-brand {
	color: #dddddd;
	}
	.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus {
	color: #ffffff;
	}
	.navbar-default .navbar-text {
	color: #dddddd;
	}
	.navbar-default .navbar-nav > li > a {
	color: #dddddd;
	}
	.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > li > a:focus {
	color: #ffffff;
	}
	.navbar-default .navbar-nav > li > .dropdown-menu {
	background-color: #0072AF;
	}
	.navbar-default .navbar-nav > li > .dropdown-menu > li > a {
	color: #dddddd;
	}
	.navbar-default .navbar-nav > li > .dropdown-menu > li > a:hover,
	.navbar-default .navbar-nav > li > .dropdown-menu > li > a:focus {
	color: #ffffff;
	background-color: #91c8ff;
	}
	.navbar-default .navbar-nav > li > .dropdown-menu > li > .divider {
	background-color: #4162d3;
	}
	.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .active > a:hover, .navbar-default .navbar-nav > .active > a:focus {
	color: #ffffff;
	background-color: #91c8ff;
	}
	.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .open > a:hover, .navbar-default .navbar-nav > .open > a:focus {
	color: #ffffff;
	background-color: #91c8ff;
	}
	.navbar-default .navbar-toggle {
	border-color: #91c8ff;
	}
	.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus {
	background-color: #91c8ff;
	}
	.navbar-default .navbar-toggle .icon-bar {
	background-color: #dddddd;
	}
	.navbar-default .navbar-collapse,
	.navbar-default .navbar-form {
	border-color: #dddddd;
	}
	.navbar-default .navbar-link {
	color: #dddddd;
	}
	.navbar-default .navbar-link:hover {
	color: #ffffff;
	}

	@media (max-width: 767px) {
	.navbar-default .navbar-nav .open .dropdown-menu > li > a {
	color: #dddddd;
	}
	.navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {
	color: #ffffff;
	}
	.navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {
	color: #ffffff;
	background-color: #91c8ff;
	}
	}
	</style>
	</head>

	<body >
<!--
##############################################################################
#
# Copyright 2016 KPMG Advisory N.V. (unless otherwise stated)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
##############################################################################
-->
	<!-- Wrap all page content here -->
	<div id="wrap">
	<!-- Static navbar -->
	<nav class="navbar navbar-default navbar-fixed-top" style="background-color:#0072AF; border-color: #0072AF;">
	<div class="container">
	<div class="navbar-header">
	<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
	<span class="sr-only">Toggle navigation</span>
	<span class="icon-bar"></span>
	<span class="icon-bar"></span>
	<span class="icon-bar"></span>
	</button>
	<a class="navbar-brand" href="http://beta.kave.io"><font size=6 color=white><em>Welcome to your </em><b>KAVE</b></font></a>
	</div>
	<div id="navbar" class="navbar-collapse collapse">
	<ul class="nav navbar-nav">
	<li class="dropdown">
	<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Notebooks <span class="caret"></span></a>
	<ul class="dropdown-menu" role="menu">
	<li><a href="http://localhost:8888">Local 8888</a></li>
	<li><a href="http://{{short_host}}:8888">Remote 8888</a></li>
	<li><a href="http://{{short_host}}:8889">Remote 8889</a></li>
	<li><a href="http://{{short_host}}:8890">Remote 8890</a></li>
	</ul>
	</li>
	HUE_LINK_IF_KNOWN
	<li><a href="http://{{AMBARI_SHORT_HOST}}:8080/">Admin</a></li>
	<li class="dropdown">
	<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Quicklinks <span class="caret"></span></a>
	<ul class="dropdown-menu" role="menu">
	ALL_OTHER_LINKS
	</ul>
	</li>
	</ul>
	</div><!--/.nav-collapse -->
	</div>
	</nav>


	<!-- Begin page content -->
	<div class="container" style="padding-top: 30px;">
	<div class="page-header">
	<table><tr><td width=200><img src="KAVE-logo-thin.png" alt="CC BY ND 4.0, CC BY NC-SA 4.0, (c) KPMG N.V. 2015" width=200></td><td width=20></td><td>
	THEPAGE!!
	</td></tr></table>
	</div>
	</div>

	</div>

	<footer><div style="background-color:#D2E7F2;">
	<div class="container" style="padding-top: 8px;">
	<p><font color="#555555"><a href="http://repos.kave.io">Software</a> | <a href="http://github.com/KaveIO/AmbariKave/wiki">Documentation</a> | <a href="http://beta.kave.io">Beta Testers</a> | <a href="http://github.com/KaveIO">Git Repo</a> | <a href="http://jira.kave.io">Bug Tracking</a> | <a href="LICENSE">license</a> | <a href="NOTICE">notice</a> | <a href="LICENSE-DOCUMENTATION-IMAGE-SUBCLAUSE">image/documentation license subclause</a></font> </p>
	</div>
	</div></footer>

	<script type='text/javascript' src="//ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	<script type='text/javascript' src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

	</body>
	</html>

>>>>>>> 98254f88e398bba8fe9772ff25df5423508bc78c

