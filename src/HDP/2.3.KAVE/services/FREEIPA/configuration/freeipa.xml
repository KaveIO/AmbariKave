<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
    <property>
        <name>client_init_wait</name>
        <value>600</value>
        <description>
            The time in seconds the client installation process will wait for a
            admin password file.
        </description>
    </property>
    <property>
        <name>forwarders</name>
        <value>8.8.8.8</value>
        <description>
            The IP address of the DNS server to whom FreeIPA should first forward requests.
            Usually this is specific to your datacenter. This can be a comma-separated list.
        </description>
    </property>
    <property require-input = "true">
        <name>directory_password</name>
        <value></value>
        <property-type>PASSWORD</property-type>
        <description>
            The directory_password will also be the ldap admin password. Must be at least 8
            characters long. This parameter will be used during the initial
            installation. After the installation reconfiguration of this password
            will not have any effect.
        </description>
    </property>
    <property  require-input = "true">
        <name>ldap_bind_password</name>
        <value></value>
        <property-type>PASSWORD</property-type>
        <description>
            The password of the user created for binding services through LDAP. Must be at least 8
            characters long. This setting is not automatically picked up by the services which would
            want to bind. This only used to generate this specific user. Be sure
            to set ipa_integration_enabled to True on the service you want to
            integrate and the ipa_bind_password to the same value as provided here.

            If this setting is not set the give user is not generated during
            installation. If you at a later stage still want this option you'll
            have to go through the ipa interface to generate itself. This setting
            will not be interpreted twice.
        </description>
    </property>
    <property>
        <name>initial_users_and_groups</name>
        <value>{"Users": [], "Groups" : {}}</value>
        <description>
            Json description of intial users to add to FreeIPA, along with any groups.
            If these users and groups already exist, nothing is done.
            you can use the simple format:
            e.g.: {"Users" : ["bob","eve"], "Groups" : { "gitlab" : ["bob"], "scientists" : ["eve", "bob"], "admins" : ["bob"] } }
            of the extended format:
            e.g.: {"Users" : [{ "username" : "bob", "email":"bob@bob.bob", "firstname":"Robert", "lastname":"Jones"},{"username": "eve"}],
                   "Groups" : [ {"name":"gitlab", "members" : ["bob"]},{"name":"admins", "members" : ["bob"]}] }
            If you want to make some special admin users, you should add them here.
            By default random passwords are assigned which must be changed on first login. If you want to specify the passwords yourself
            then add a password to the initial_user_password field.
        </description>
    </property>
    <property>
        <name>initial_user_passwords</name>
        <value>{ }</value>
        <description>
            Json description of intial passwords to set in freeIPA.
            This is only used if a new user is added.
            e.g.: {"bob":"mynameisbobandIamanadminandthisisnotmypassword"}
            All passwords set this way must be at least eight characters.
            If set this way, passwords must be changed on the first login of this user.
        </description>
    </property>
    <property>
        <name>initial_sudoers</name>
        <value>{ "Users": [], "Groups":[], "cmdcat": "all", "hostcat": "all", "runasusercat": "all", "runasgroupcat": "all" }</value>
        <description>
            List of usernames and groups to add to sudoers list.
            We automatically create the sudoer rule by the name of allsudo
            Making users sudoers allows them full privilages on the machines in the cluster
            'Users': list of users to add
            'Groups': list of groups to add
            Remaining options (cmdcat, hostcat, runasusercat, runasgroupcat) are the command-line args used when making the sudoers group
            see ipa sudorule-add --help for details, or the freeipa documentation online
        </description>
    </property>
    <property>
        <name>install_with_dns</name>
        <value>True</value>
        <description>
            This will install the FreeIPA server with a DNS. This will also
            overwrite some dns related network settings.
            PLEASE NOTE! The network settings are NOT permanently overwriten.
            this is the machine owners responsibility.
            PLEASE NOTE! The install without dns is not tested.
        </description>
    </property>
    <property>
        <name>default_shell</name>
        <value>/bin/bash</value>
        <description>
            Default shell for all users, if you intend to use KaveToolbox, this should be set to /bin/bash.
        </description>
    </property>
    <property>
        <name>ldap_bind_user</name>
        <value>kave_bind_user</value>
        <description>
            The name of the user created for binding services through LDAP. This
            setting is not automatically picked up by the services which would
            want to bind. This only used to generate this specific user. Be sure
            to set ipa_integration_enabled to True on the service you want to
            integrate and the ipa_bind_user to the same value as provided here.
        </description>
    </property>
    <property>
        <name>kadm5acl_template</name>
        <value>*/admin@{{realm}} *
admin@{{realm}} *
admin@{{realm}} a *
admin@{{realm}} i *
admin@{{realm}} x *
admin@{{realm}} m *
</value>
        <description>
            The kadm5.acl file controls who can modify the kerberos database directly.
            This is usually just the explicit kerberos admin.
        </description>
    </property>
    <property>
        <name>resolvconf_template</name>
        <value>search {{domain}}
nameserver {{ipa_server_ip_address}}
</value>
        <description>
            Rasolve.conf is needed within the cluster to locate machines.
            An advanced user will want to modify this in case they have multiple internal domains.
        </description>
    </property>
    <property>
        <name>required_users</name>
        <value>{
    "nagios": {"groups": ["hadoop", "nagios"]},
    "hive": {"groups": ["hadoop"]},
    "oozie": {"groups": ["hadoop", "users"]},
    "ambari-qa": {"groups": ["hadoop", "users"]},
    "flume": {"groups": ["hadoop"]},
    "hdfs": {"groups": ["hadoop", "hdfs"]},
    "knox": {"groups": ["hadoop"]},
    "storm": {"groups": ["hadoop"]},
    "atlas": {"groups": ["hadoop"]},
    "accumulo": {"groups": ["hadoop"]},
    "mapred": {"groups": ["hadoop"]},
    "hbase": {"groups": ["hadoop"]},
    "tez": {"groups": ["hadoop", "users"]},
    "zookeeper": {"groups": ["hadoop"]},
    "kafka": {"groups": ["hadoop"]},
    "falcon": {"groups": ["hadoop"]},
    "sqoop": {"groups": ["hadoop"]},
    "yarn": {"groups": ["hadoop"]},
    "hcat": {"groups": ["hadoop"]},
    "dbus": {"comment": "System message bus", "options": ["-d", "/", "-M"]},
    "httpfs": {"comment": "Hadoop HTTPFS", "options": ["-d", "/var/run/hadoop/httpfs", "-M"]},
    "apache": {"comment": "Apache", "options": ["-d", "/var/www", "-M"]},
    "rrdcached": {"comment": "rrdcached", "options": ["-d", "/var/rrdtool/rrdcached", "-M"]},
    "mysql": {"comment": "MySQL Server", "options": ["-d", "/var/lib/mysql", "-M"]}
}</value>
        <description>
            ADVANCED: A list of (service) users that need to be present on each machine.
            Each FreeIPA client calls useradd with these users
            Format is JSON: "username": {"comment": "", "groups":["",...], "options": ["",...]}
            comment: comment to add to user creation: e.g.: new dir
            options: additional options for useradd, e.g. ["-d", "/new/home/dir"]
        </description>
    </property>
    <property>
        <name>headless_users</name>
        <value>{
    "Ambari Smoke Test User": {"identity": "ambari-qa", "file": "/etc/security/keytabs/smokeuser.headless.keytab",
                               "user": "hdfs", "group": "hadoop", "permissions": "440"},
    "HDFS User": {"identity": "hdfs", "file": "/etc/security/keytabs/hdfs.headless.keytab",
                  "user": "hdfs", "group": "hadoop", "permissions": "440"},
    "HDFS User for nodemanager": {"identity": "hdfs", "file": "/etc/security/keytabs/hdfs.headless.keytab",
                                  "user": "hdfs", "group": "hadoop", "permissions": "440"},
    "HBase User": {"identity": "hbase", "file": "/etc/security/keytabs/hbase.headless.keytab",
                   "user": "hbase", "group": "hadoop", "permissions": "440"},
    "Storm User": {"identity": "storm", "file": "/etc/security/keytabs/storm.headless.keytab",
                   "user": "storm", "group": "hadoop", "permissions": "440"},
    "Accumulo User": {"identity": "accumulo", "file": "/etc/security/keytabs/accumulo.headless.keytab",
                   "user": "accumulo", "group": "hadoop", "permissions": "440"},
    "Accumulo Tracer User": {"identity": "accumulo", "file": "/etc/security/keytabs/accumulo-tracer.headless.keytab",
                   "user": "accumulo", "group": "hadoop", "permissions": "440"},
    "Spark User": {"identity": "spark", "file": "/etc/security/keytabs/spark.headless.keytab",
                   "user": "spark", "group": "hadoop", "permissions": "440"}
}</value>
        <description>
            ADVANCED: A list of user (principals) that need to be added through freeIPA and keytabs created.
            The FreeIPA service creates each of these user principals and keytabs
            Following this each FreeIPA client also creates the keytabs
        </description>
    </property>
    <property>
        <name>service_users</name>
        <value>{
    "HDFS SPNEGO User": {"hosts": {{namenode_host}},
                         "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                         "user": "root", "group": "hadoop", "permissions": "440"},
    "HDFS SPNEGO User": {"hosts": {{snamenode_host}},
                         "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                         "user": "root", "group": "hadoop", "permissions": "440"},
    "WebHCat SPNEGO User": {"hosts": {{webhcat_server_host}},
                            "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                            "user": "root", "group": "hadoop", "permissions": "440"},
    "Hive SPNEGO User": {"hosts": {{hive_server_host}},
                         "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                         "user": "root", "group": "hadoop", "permissions": "440"},
    "Oozie SPNEGO User": {"hosts": {{oozie_server}},
                          "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                          "user": "root", "group": "hadoop", "permissions": "440"},
    "History server SPNEGO User": {"hosts": {{hs_host}},
                                   "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                                   "user": "root", "group": "hadoop", "permissions": "440"},
    "ResourceManager SPNEGO User": {"hosts": {{rm_host}},
                                    "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                                    "user": "root", "group": "hadoop", "permissions": "440"},
    "NodeManager SPNEGO User": {"hosts": {{nm_hosts}},
                                "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                                "user": "root", "group": "hadoop", "permissions": "440"},
    "YARN ATS HTTP User": {"hosts": {{jtnode_host}},
                           "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                           "user": "root", "group": "hadoop", "permissions": "440"},
    "DataNode": {"hosts": {{slave_hosts}},
                 "identity": "dn", "file": "/etc/security/keytabs/dn.service.keytab",
                 "user": "hdfs", "group": "hadoop", "permissions": "400"},
    "HBase Master": {"hosts": {{hbase_master_hosts}},
                     "identity": "hbase", "file": "/etc/security/keytabs/hbase.service.keytab",
                     "user": "hbase", "group": "hadoop", "permissions": "400"},
    "HBase Master": {"hosts": {{hbase_rs_hosts}},
                     "identity": "hbase", "file": "/etc/security/keytabs/hbase.service.keytab",
                     "user": "hbase", "group": "hadoop", "permissions": "400"},
    "History Server": {"hosts": {{hs_host}},
                       "identity": "jhs", "file": "/etc/security/keytabs/jhs.service.keytab",
                       "user": "mapred", "group": "hadoop", "permissions": "400"},
    "HiveServer2": {"hosts": {{hive_server_host}},
                    "identity": "hive", "file": "/etc/security/keytabs/hive.service.keytab",
                    "user": "hive", "group": "hadoop", "permissions": "400"},
    "Hive Metastore": {"hosts": {{hive_metastore_host}},
                       "identity": "hive", "file": "/etc/security/keytabs/hive.service.keytab",
                       "user": "hive", "group": "hadoop", "permissions": "400"},
    "NameNode": {"hosts": {{namenode_host}},
                 "identity": "nn", "file": "/etc/security/keytabs/nn.service.keytab",
                 "user": "hdfs", "group": "hadoop", "permissions": "400"},
    "Secondary NameNode": {"hosts": {{snamenode_host}},
                           "identity": "nn", "file": "/etc/security/keytabs/nn.service.keytab",
                           "user": "hdfs", "group": "hadoop", "permissions": "400"},
    "NodeManager": {"hosts": {{nm_hosts}},
                    "identity": "nm", "file": "/etc/security/keytabs/nm.service.keytab",
                    "user": "yarn", "group": "hadoop", "permissions": "400"},
    "Oozie Server": {"hosts": {{oozie_server}},
                     "identity": "oozie", "file": "/etc/security/keytabs/oozie.service.keytab",
                     "user": "oozie", "group": "hadoop", "permissions": "400"},
    "ResourceManager": {"hosts": {{rm_host}},
                        "identity": "rm", "file": "/etc/security/keytabs/rm.service.keytab",
                        "user": "yarn", "group": "hadoop", "permissions": "400"},
    "ZooKeeper Server": {"hosts": {{zookeeper_hosts}},
                         "identity": "zookeeper", "file": "/etc/security/keytabs/zk.service.keytab",
                         "user": "zookeeper", "group": "hadoop", "permissions": "400"},
    "App Timeline Server": {"hosts": {{app_timeline_server}},
                            "identity": "yarn", "file": "/etc/security/keytabs/yarn.service.keytab",
                            "user": "yarn", "group": "hadoop", "permissions": "400"},
    "Nagios Server": {"hosts": {{nagios_server}},
                      "identity": "nagios", "file": "/etc/security/keytabs/nagios.service.keytab",
                      "user": "nagios", "group": "hadoop", "permissions": "400"},
    "Falcon SPNEGO User": {"hosts": {{falcon_server}},
                           "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                           "user": "root", "group": "hadoop", "permissions": "440"},
    "Falcon Server": {"hosts": {{falcon_server}},
                      "identity": "falcon", "file": "/etc/security/keytabs/falcon.service.keytab",
                      "user": "falcon", "group": "hadoop", "permissions": "400"},
    "Knox Gateway": {"hosts": {{knox_server}},
                     "identity": "knox", "file": "/etc/security/keytabs/knox.service.keytab",
                     "user": "knox", "group": "hadoop", "permissions": "400"},
    "Storm UI SPNEGO User": {"hosts": {{storm_ui_server}},
                             "identity": "HTTP", "file": "/etc/security/keytabs/spnego.service.keytab",
                             "user": "root", "group": "hadoop", "permissions": "440"},
    "Storm UI Server": {"hosts": {{storm_ui_server}},
                        "identity": "storm", "file": "/etc/security/keytabs/storm.service.keytab",
                        "user": "storm", "group": "hadoop", "permissions": "400"},
    "DRPC Server": {"hosts": {{storm_drpc_server}},
                    "identity": "nimbus", "file": "/etc/security/keytabs/nimbus.service.keytab",
                    "user": "storm", "group": "hadoop", "permissions": "400"},
    "accumulo Server": {"hosts": {{accumulo_gc_hosts}},
                    "identity": "accumulo", "file": "/etc/security/keytabs/accumulo.service.keytab",
                    "user": "accumulo", "group": "hadoop", "permissions": "400"},
    "ams Server": {"hosts": {{ams_hosts}},
                    "identity": "ams", "file": "/etc/security/keytabs/ams.service.keytab",
                    "user": "ams", "group": "hadoop", "permissions": "400"},
    "ams hbase Server": {"hosts": {{ams_hosts}},
                    "identity": "amshbase", "file": "/etc/security/keytabs/ams-hbase.master.keytab",
                    "user": "ams", "group": "hadoop", "permissions": "400"},
    "ams region Server": {"hosts": {{ams_hosts}},
                    "identity": "amshbase", "file": "/etc/security/keytabs/ams-hbase.regionserver.keytab",
                    "user": "ams", "group": "hadoop", "permissions": "400"},
    "ams zookeper Server": {"hosts": {{ams_hosts}},
                    "identity": "amszk", "file": "/etc/security/keytabs/ams-zk.service.keytab",
                    "user": "ams", "group": "hadoop", "permissions": "400"},
    "atlas Server": {"hosts": {{atlas_hosts}},
                    "identity": "atlas", "file": "/etc/security/keytabs/atlas.service.keytab",
                    "user": "atlas", "group": "hadoop", "permissions": "400"},
    "kafka Server": {"hosts": {{kafka_hosts}},
                    "identity": "kafka", "file": "/etc/security/keytabs/kafka.service.keytab",
                    "user": "kafka", "group": "hadoop", "permissions": "400"}
}</value>
        <description>
            ADVANCED: A list of service keytabs that need to be created through freeIPA on specific servers
            The FreeIPA client creates each of keytabs
            This is a Jinja template, that creates a JSON file, interpreted as a dictionary
            The parameters in {{xxx}} are the list of hosts which are read from the clusterHostInfo
        </description>
    </property>
</configuration>
